{"ast":null,"code":"import { create } from 'zustand';\nimport produce from 'immer';\nimport { persist } from 'zustand/middleware';\nconst useRecipeStore = create(persist(set => ({\n  recipes: [persist.state],\n  isLoading: false,\n  loadRecipes: async () => {\n    set({\n      isLoading: true\n    });\n    try {\n      const response = await fetch('https://api.punkapi.com/v2/beers?page=2');\n      const data = await response.json();\n      set(produce(state => {\n        state.recipes = data;\n        state.isLoading = false;\n      }));\n    } catch (error) {\n      console.error('Failed to load recipes:', error);\n      set({\n        isLoading: false\n      });\n    }\n  },\n  deleteRecipe: recipeId => {\n    set(produce(state => {\n      state.recipes = state.recipes.filter(recipe => recipe.id !== recipeId);\n    }));\n  }\n}), {\n  name: 'recipe-store'\n}));\nexport default useRecipeStore;","map":{"version":3,"names":["create","produce","persist","useRecipeStore","set","recipes","state","isLoading","loadRecipes","response","fetch","data","json","error","console","deleteRecipe","recipeId","filter","recipe","id","name"],"sources":["/Users/User/Documents/GitHub/AiroMedicalTT/src/zustand/RecipesStore.js"],"sourcesContent":["import {create} from 'zustand';\nimport produce from 'immer';\nimport { persist } from 'zustand/middleware';\n\nconst useRecipeStore = create(persist((set) => ({\n    recipes: [persist.state],\n    isLoading: false,\n    loadRecipes: async () => {\n        set({ isLoading: true });\n        try {\n            const response = await fetch('https://api.punkapi.com/v2/beers?page=2');\n            const data = await response.json();\n            set(produce((state) => {\n                state.recipes = data;\n                state.isLoading = false;\n            }));\n        } catch (error) {\n            console.error('Failed to load recipes:', error);\n            set({ isLoading: false });\n        }\n    },\n    deleteRecipe: (recipeId) => {\n        set(produce((state) => {\n            state.recipes = state.recipes.filter((recipe) => recipe.id !== recipeId);\n    }));\n  },\n}), {\n    name: 'recipe-store',\n}));\n\nexport default useRecipeStore;"],"mappings":"AAAA,SAAQA,MAAM,QAAO,SAAS;AAC9B,OAAOC,OAAO,MAAM,OAAO;AAC3B,SAASC,OAAO,QAAQ,oBAAoB;AAE5C,MAAMC,cAAc,GAAGH,MAAM,CAACE,OAAO,CAAEE,GAAG,KAAM;EAC5CC,OAAO,EAAE,CAACH,OAAO,CAACI,KAAK,CAAC;EACxBC,SAAS,EAAE,KAAK;EAChBC,WAAW,EAAE,MAAAA,CAAA,KAAY;IACrBJ,GAAG,CAAC;MAAEG,SAAS,EAAE;IAAK,CAAC,CAAC;IACxB,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,CAAC;MACvE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCR,GAAG,CAACH,OAAO,CAAEK,KAAK,IAAK;QACnBA,KAAK,CAACD,OAAO,GAAGM,IAAI;QACpBL,KAAK,CAACC,SAAS,GAAG,KAAK;MAC3B,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CT,GAAG,CAAC;QAAEG,SAAS,EAAE;MAAM,CAAC,CAAC;IAC7B;EACJ,CAAC;EACDQ,YAAY,EAAGC,QAAQ,IAAK;IACxBZ,GAAG,CAACH,OAAO,CAAEK,KAAK,IAAK;MACnBA,KAAK,CAACD,OAAO,GAAGC,KAAK,CAACD,OAAO,CAACY,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACC,EAAE,KAAKH,QAAQ,CAAC;IAChF,CAAC,CAAC,CAAC;EACL;AACF,CAAC,CAAC,EAAE;EACAI,IAAI,EAAE;AACV,CAAC,CAAC,CAAC;AAEH,eAAejB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}